#include <Adafruit_GFX.h>     // Include Adafruit Core graphics library
#include <Adafruit_ST7735.h>  // Include Adafruit Hardware-specific library for ST7735
#include <SPI.h>              // Include Arduino SPI library
#include <CuteBuzzerSounds.h>

#define TFT_RST 4
#define TFT_CS 6
#define TFT_DC 5

#define TFT_MOSI 10  // SDA pin on display (Data out)
#define TFT_SCLK 8   // SCL pin on display (Clock out)

#define BUZZER_PIN 7


Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_RST);

const int screenWidth = 160;  // Width of the display
const int screenHeight = 80;  // Height of the display

const int imageWidth = 30;   // Width of the image
const int imageHeight = 30;  // Height of the image

int xPosReel1, xPosReel2, xPosReel3, yPosReel1, yPosReel2, yPosReel3;

enum Symbols {
  CHERRY = 0,
  LEMON,
  ORANGE,
  PLUM,
  WATERMELON,
  BELL,
  DIAMOND,
  BAR,
  SEVEN
};

// Reel position index
int indexReel1, indexReel2, indexReel3;

bool bWin;
long delayCount;

const uint16_t sevenSymbol[imageWidth * imageHeight] PROGMEM = {

  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081D, 0x001B, 0xFFFF, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0x001B, 0x081D, 0x001B, 0x001B, 0x0017, 0x0015, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x001B, 0x001B, 0x001C, 0x081C, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x081C, 0x081C, 0x001B, 0x001B, 0x001C, 0x081B, 0xFFFF, 0x001B, 0x081D, 0x001B, 0x001A, 0x0015, 0x0016, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x081C, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081C, 0x081D, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x0017, 0x0015, 0x0016, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081C, 0x001B, 0x001B, 0x0018, 0x0015, 0x0015, 0x0016, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x0018, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x0019, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x0018, 0x0015, 0x0015, 0x0015, 0x0016, 0x0016, 0x0015, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081C, 0x081D, 0x081D, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x001B, 0x001B, 0x0017, 0x0015, 0x0015, 0x0015, 0x0016, 0x0016, 0x0015, 0xFFFF, 0x2015,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081C, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x081C, 0x081D, 0x081D, 0x001B, 0x001B, 0x0019, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x0019, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x001B, 0xFFFF, 0xFFFF, 0xFFFF, 0x001C, 0x001C, 0x001B, 0x001B, 0x001D, 0x0019, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0xFFFF, 0x0817, 0x0000, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081D, 0x001B, 0xFFFF, 0x001F, 0x081F, 0x201F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0015, 0x0016, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0016, 0x0016, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081D, 0x001B, 0x2015, 0x081F, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0x0015, 0x0016, 0x0017, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x0817, 0xFFFF, 0xFFFF, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081D, 0x001B, 0xFFFF, 0x081F, 0xFFFF, 0x080F, 0xFFFF, 0x0015, 0x0016, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0016, 0x001F, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x081D, 0x001B, 0xFFFF, 0x201F, 0x2015, 0xFFFF, 0x0015, 0x0016, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x080F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x001B, 0x001B, 0x001B, 0x001B, 0x001B, 0x001C, 0x001C, 0x101B, 0xFFFF, 0x2015, 0xFFFF, 0x0015, 0x0016, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x2015, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0x001F, 0x0017, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x0817, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x001F, 0x000F, 0x000F, 0x000F, 0x000F, 0x000F, 0x000F, 0xFFFF, 0x2015, 0xFFFF, 0x0015, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0013, 0x001F, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0xFFFF, 0x0015, 0x0016, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x0817, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0x0015, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0xFFFF, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0000, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0x0015, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0x001F, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x000F, 0xFFFF, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0017, 0x0015, 0xFFFF, 0x0817, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0x0015, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0xFFFF, 0x000F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0x0015, 0x0017, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0016, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x000F, 0xFFFF, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0016, 0xFFFF, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0013, 0x0015, 0x0016, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0015, 0x0016, 0x0015, 0x0015, 0xFFFF, 0x000F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t barSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x6492, 0x9638, 0x9618, 0x9638, 0x9618, 0x85D7, 0x6492, 0x0145, 0x0000, 0x0000, 0x0165, 0x9618, 0x8E18, 0x9638, 0x5C71, 0x0000, 0x0000, 0x00A2, 0x8DF7, 0x9638, 0x8E18, 0x8E18, 0x8DF7, 0x7D75, 0x3B8E, 0x0020, 0x0000, 0x0000,
  0x0000, 0x0000, 0x9618, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xA6BA, 0x0020, 0x0000, 0x6492, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0x0104, 0x0000, 0x00C3, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0x6CD3, 0x0000, 0x0000,
  0x0000, 0x0000, 0x7D75, 0xCFFF, 0x6CF3, 0x0145, 0x0145, 0x64D3, 0xCFFF, 0x9E9A, 0x0020, 0x0061, 0xB73C, 0xCFFF, 0x5430, 0xA6DB, 0xCFFF, 0x43CF, 0x0000, 0x00A2, 0xBF5D, 0xCFFF, 0x2ACB, 0x00E3, 0x0124, 0x5451, 0xC7DF, 0xB71C, 0x0020, 0x0000,
  0x0000, 0x0000, 0x7D96, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xA6BA, 0x0186, 0x0000, 0x22CB, 0xCFFF, 0xBF7D, 0x0000, 0x5430, 0xCFFF, 0xA6BA, 0x0000, 0x0082, 0xBF7D, 0xCFFF, 0x9618, 0x7D55, 0x7D75, 0xA6DB, 0xCFFF, 0x9638, 0x0000, 0x0000,
  0x0000, 0x0000, 0x7D96, 0xCFFF, 0x9E79, 0x64B2, 0x64B2, 0x8DF7, 0xBF9E, 0x9E59, 0x00C3, 0x7D96, 0xCFFF, 0xB73C, 0x5430, 0x7D96, 0xCFFF, 0xCFFF, 0x09E7, 0x0020, 0xBF9E, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0x9618, 0x0186, 0x0000, 0x0000,
  0x0000, 0x0000, 0x7D75, 0xCFDF, 0x7555, 0x1228, 0x1228, 0x5C51, 0xCFFF, 0xCFFF, 0x43AE, 0xB75D, 0xCFFF, 0xCFDF, 0xCFFF, 0xCFFF, 0xCFDF, 0xCFDF, 0x6CD3, 0x0000, 0xBF7D, 0xCFDF, 0x2AEB, 0x0186, 0xBF5D, 0xCFDF, 0x330C, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x9E59, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0xCFFF, 0x9618, 0x6CF3, 0xCFFF, 0xBF9E, 0x0104, 0x00A2, 0x00A2, 0x5C71, 0xCFFF, 0xCFDF, 0x01C7, 0xCFFF, 0xCFFF, 0x1249, 0x0000, 0x3B6D, 0xCFFF, 0xCFFF, 0x1208, 0x0000, 0x0000,
  0x0000, 0x0000, 0x22CB, 0x43AE, 0x438E, 0x3B8E, 0x3B8E, 0x334D, 0x1A69, 0x0020, 0x228A, 0x43AE, 0x1A8A, 0x0000, 0x0000, 0x0000, 0x00C3, 0x43AE, 0x43AE, 0x0186, 0x334D, 0x43AE, 0x0104, 0x0000, 0x0020, 0x3B4D, 0x43AE, 0x1A8A, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0x0000, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000, 0x0020, 0x0020, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t diamondSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xC800, 0x49E0, 0x09E0, 0x09E0, 0x09E0, 0x09E0, 0x09E0, 0x09E0, 0x09E0, 0x09E0, 0x49E0, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0x8BE7, 0xCFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x4800, 0xFFFF, 0x62A2, 0x31C1, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x1941, 0x3A02, 0x8386, 0x8BE8, 0x8BC7, 0x8BC7, 0x8BC7, 0x8BC7, 0x8BC7, 0x8BC8, 0x8386, 0x9C6A, 0xCE73, 0xFFFF, 0xCBEF, 0xFFFF, 0xFFFF,
  0xFFFF, 0x0000, 0x49E0, 0x0000, 0x5242, 0x4A22, 0x2181, 0x2981, 0x2981, 0x2981, 0x2981, 0x29A1, 0x2181, 0x3A02, 0x6B04, 0x7325, 0x8BC7, 0x9C28, 0x9408, 0x9408, 0x9408, 0x9408, 0x9408, 0x9C6A, 0xBD6D, 0xBDCF, 0xC800, 0x8DEF, 0xCFE0, 0xFFFF,
  0xFFFF, 0x49E0, 0xFFFF, 0x5222, 0x5A62, 0x5222, 0x29A1, 0x2161, 0x2161, 0x2161, 0x2181, 0x1961, 0x3A02, 0x6B04, 0x6B05, 0x6AE4, 0x6AE4, 0x7B66, 0x8BC8, 0x8BC7, 0x8BC8, 0x8386, 0x9CED, 0xC77C, 0xB5AF, 0xC60F, 0xB58E, 0xFFFF, 0xCDEF, 0xFFFF,
  0x3180, 0xFFFF, 0x4A22, 0x5A62, 0x5222, 0x5242, 0x39E2, 0x1961, 0x2181, 0x2181, 0x1961, 0x4223, 0x6B05, 0x6AE4, 0x6AE4, 0x6AE4, 0x6AE4, 0x6AE4, 0x7B66, 0x8BE8, 0x8BA7, 0x9CED, 0xCFDE, 0xCFFF, 0xC79C, 0xB5D0, 0xC5EF, 0xB58E, 0xFFFF, 0x9CCC,
  0xFFFF, 0x4A22, 0x5242, 0x5222, 0x5222, 0x5222, 0x4A22, 0x2181, 0x2161, 0x1961, 0x4A43, 0x6B05, 0x6AE4, 0x6AE4, 0x6AE4, 0x6AE4, 0x6AE4, 0x6AE4, 0x62E4, 0x7346, 0x8BE8, 0x8BA7, 0xA591, 0xCFBE, 0xB612, 0xB58E, 0xB5AE, 0xBDCF, 0xAD4D, 0xFFFF,
  0x5A62, 0x5242, 0x5A42, 0x5242, 0x5242, 0x5242, 0x5A42, 0x39E2, 0x2181, 0x5284, 0x7325, 0x6B05, 0x6B05, 0x6B05, 0x6B05, 0x6B05, 0x6B05, 0x6B05, 0x6B05, 0x6AE4, 0x7325, 0x8BE8, 0x9CAA, 0xC694, 0xB5AE, 0xBDCF, 0xBDCF, 0xBDEF, 0xBDEF, 0xCE72,
  0x39E2, 0x4202, 0x39E2, 0x39E2, 0x39E2, 0x39E2, 0x41E2, 0x39C2, 0x4A43, 0x62C4, 0x5AA3, 0x62A3, 0x62A3, 0x62A3, 0x62A3, 0x62A3, 0x62A3, 0x62A4, 0x62A4, 0x5A83, 0x7C2B, 0xBF1A, 0xA52E, 0x946A, 0x948B, 0x948A, 0x948A, 0x948A, 0xA4CB, 0x946A,
  0x1941, 0x1961, 0x2181, 0x1961, 0x1961, 0x1961, 0x1961, 0x1961, 0x39E2, 0x5222, 0x4A22, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5243, 0xAE57, 0xCFFF, 0x9DB3, 0x62C4, 0x62C4, 0x62C4, 0x62C4, 0x6AE4, 0x62C4, 0x5A62,
  0xFFFF, 0x2961, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x2181, 0x5222, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5242, 0x4A01, 0x5A84, 0x9D92, 0x6AE4, 0x6AE4, 0x6B05, 0x6B05, 0x7305, 0x7305, 0x6B25, 0xFFFF,
  0x09E0, 0xFFFF, 0x1961, 0x2181, 0x2181, 0x2161, 0x2181, 0x2181, 0x1961, 0x39E2, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5A63, 0x6AE4, 0x6AE4, 0x6B05, 0x6AE4, 0x6B05, 0x6B05, 0x62C4, 0xFFFF, 0x8BE7,
  0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x2161, 0x2181, 0x2161, 0x2981, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x62C4, 0x6B05, 0x6AE4, 0x6AE4, 0x6B05, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF,
  0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x2161, 0x2181, 0x1961, 0x41E2, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5A63, 0x6B05, 0x6AE4, 0x6AE4, 0x6B05, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x2161, 0x2161, 0x29A1, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x62C4, 0x6B05, 0x6AE4, 0x6B05, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x2181, 0x2161, 0x4202, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x5A63, 0x6B05, 0x6AE4, 0x6B05, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x1961, 0x29A2, 0x5242, 0x5222, 0x5222, 0x5222, 0x5222, 0x5222, 0x62A4, 0x6AE4, 0x6B05, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x2161, 0x4A02, 0x5242, 0x5222, 0x5222, 0x5222, 0x5242, 0x6AE4, 0x6B05, 0x6B05, 0x6AE4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x31C2, 0x5242, 0x5222, 0x5222, 0x5222, 0x5AA3, 0x7325, 0x6B05, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2181, 0x2181, 0x4A22, 0x5242, 0x5222, 0x5242, 0x6B05, 0x6B04, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x2161, 0x2161, 0x39C2, 0x5242, 0x4A02, 0x62A4, 0x7305, 0x62E4, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x1961, 0x2181, 0x4A22, 0x5A62, 0x6AE4, 0x6305, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x1141, 0x39E2, 0x6283, 0x6B05, 0xFFFF, 0x49E7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x09E0, 0xFFFF, 0x39E2, 0x5263, 0xFFFF, 0x49E0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4800, 0xFFFF, 0xFFFF, 0x4BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4BE0, 0x4BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};


const uint16_t bellSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x067F, 0x0DF7, 0x165D, 0x163D, 0x163D, 0x163D, 0x163D, 0x15BD, 0x0DF7, 0x067F, 0x07FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF, 0xFFFF, 0x161D, 0x16BF, 0x161D, 0x161D, 0x1EBF, 0x161D, 0xFFFF, 0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0x063F, 0x16DF, 0x16DF, 0x169F, 0x167E, 0x161D, 0x161C, 0x161D, 0x163D, 0x163D, 0x163D, 0x055C, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x03FF, 0xFFFF, 0x16BF, 0x1EDF, 0x1F1F, 0x1EFF, 0x16BF, 0x16BF, 0x169F, 0x165E, 0x161D, 0x161D, 0x167E, 0x167F, 0x163D, 0x161D, 0xFFFF, 0x03FF, 0x07FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x4FFF, 0xFFFF, 0x1EBF, 0x1F1F, 0x16DF, 0x169F, 0x169F, 0x169F, 0x169F, 0x16BF, 0x16BF, 0x167E, 0x161D, 0x161D, 0x161D, 0x165E, 0x167E, 0x161D, 0xFFFF, 0x4BFF, 0x07FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0x16BF, 0x173F, 0x1EBF, 0x46FF, 0x571F, 0x571F, 0x4F1F, 0x3EFF, 0x1EBF, 0x169F, 0x16BF, 0x167E, 0x161D, 0x161D, 0x161D, 0x161D, 0x169F, 0x161D, 0xFFFF, 0x2555, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x27FF, 0xFFFF, 0x16BF, 0x1F3F, 0x26BF, 0x7F5F, 0x979F, 0x8F9F, 0x877F, 0x6F3F, 0x673F, 0x5F1F, 0x26BF, 0x169F, 0x16BF, 0x165E, 0x161D, 0x161D, 0x161D, 0x161D, 0x16BF, 0x161C, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x07FF, 0xFFFF, 0x167F, 0x169F, 0x16BF, 0x673F, 0x979F, 0x8F7F, 0x8F7F, 0x8F9F, 0x877F, 0x5F3F, 0x673F, 0x571F, 0x16BF, 0x16BF, 0x169F, 0x161D, 0x161D, 0x161D, 0x161D, 0x163D, 0x161D, 0x15DD, 0xFFFF, 0x07FF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0x16BF, 0x16DF, 0x169F, 0x775F, 0x8F9F, 0x8F7F, 0x8F7F, 0x8F7F, 0x8F7F, 0x673F, 0x5F3F, 0x673F, 0x2EDF, 0x169F, 0x16BF, 0x165E, 0x161C, 0x161D, 0x161D, 0x161C, 0x165E, 0x161D, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0x169F, 0x1EFF, 0x169F, 0x5F3F, 0x8F7F, 0x8F9F, 0x8F9F, 0x979F, 0x7F7F, 0x5F3F, 0x5F3F, 0x673F, 0x36DF, 0x169F, 0x16BF, 0x167F, 0x161D, 0x161D, 0x161D, 0x161D, 0x165E, 0x163D, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x255F, 0xFFFF, 0x16BF, 0x1EFF, 0x169F, 0x2EDF, 0x6F3F, 0x775F, 0x775F, 0x6F5F, 0x5F3F, 0x5F3F, 0x673F, 0x5F3F, 0x1EBF, 0x169F, 0x16BF, 0x169F, 0x161D, 0x161D, 0x161D, 0x161D, 0x165E, 0x161D, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x27FF, 0xFFFF, 0x169F, 0x1EFF, 0x169F, 0x169F, 0x36DF, 0x5F3F, 0x673F, 0x673F, 0x673F, 0x673F, 0x5F3F, 0x2EDF, 0x169F, 0x16BF, 0x16BF, 0x169F, 0x161D, 0x161D, 0x161D, 0x161D, 0x165E, 0x0E1D, 0xFFFF, 0x255F, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x0DFF, 0xFFFF, 0x16BF, 0x1F1F, 0x16BF, 0x16BF, 0x16BF, 0x26BF, 0x3EFF, 0x471F, 0x46FF, 0x3EFF, 0x1EBF, 0x169F, 0x16BF, 0x16BF, 0x16BF, 0x165E, 0x161D, 0x161D, 0x161D, 0x161D, 0x167E, 0x161C, 0xFFFF, 0x0DF7, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x0DFF, 0x07FF, 0x163D, 0x16BF, 0x165E, 0x167E, 0x167F, 0x169F, 0x0E9F, 0x169F, 0x169F, 0x169F, 0x16BF, 0x16BF, 0x169F, 0x167E, 0x163D, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x169F, 0x161D, 0x07FF, 0x0DFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x067F, 0xFFFF, 0x161C, 0x167F, 0x161C, 0x161D, 0x161D, 0x161D, 0x161D, 0x163D, 0x163D, 0x163D, 0x163D, 0x163D, 0x161D, 0x161C, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x169F, 0x161C, 0xFFFF, 0x067F, 0xFFFF, 0xFFFF,
  0xFFFF, 0x0DFF, 0xFFFF, 0x15DB, 0x163D, 0x163D, 0x161D, 0x161D, 0x0E1D, 0x0E1D, 0x0E1D, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x163D, 0x163D, 0x161D, 0x161D, 0x161D, 0x161D, 0x161D, 0x163D, 0x163D, 0x15DB, 0xFFFF, 0x0DFF, 0xFFFF,
  0x27FF, 0xFFFF, 0x053A, 0x0E1D, 0x165E, 0x161C, 0x163D, 0x163D, 0x1E5D, 0x267E, 0x1E3D, 0x0DDB, 0x0DDB, 0x0DBB, 0x0DBB, 0x0DBB, 0x0DBB, 0x0DDB, 0x0DDB, 0x0DDB, 0x0DDC, 0x15FC, 0x15FC, 0x161D, 0x161D, 0x165E, 0x165E, 0x163D, 0xFFFF, 0x255F,
  0xFFFF, 0x265E, 0x269E, 0x2EDF, 0x2E9E, 0x36DF, 0x36DF, 0x3EFF, 0x3EFF, 0x471F, 0x263C, 0x0D59, 0x0D7A, 0x0D79, 0x0D79, 0x0D79, 0x0D79, 0x0D79, 0x0D79, 0x0D79, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D9A, 0x0D9A, 0x0DBA, 0x161D, 0x161D, 0x0DBB, 0xFFFF,
  0x3EFF, 0x3F1F, 0x3F3F, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3F1F, 0x1DFC, 0x0D79, 0x0D9A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D79, 0x0DBA, 0x0DBB, 0x0D9A,
  0x3EFF, 0x3F1F, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3F1F, 0x1DFC, 0x0D79, 0x0D9A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D9A, 0x0D9A, 0x0D9A, 0x0D9A, 0x0D9A, 0x0D7A, 0x0D9A, 0x0D7A, 0x0D9A, 0x0D7A,
  0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x3EFF, 0x36FF, 0x36DF, 0x3EFF, 0x1E1C, 0x0559, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D7A, 0x0D79, 0x0D79, 0x0579, 0x0559, 0x0559, 0x0579, 0x0D79, 0x0D7A, 0x0D9A, 0x0D9A, 0x0D7A, 0x0D9A,
  0x3EFF, 0x3EFF, 0x36FF, 0x3EFF, 0x3EDF, 0x3EFF, 0x46FF, 0x4EFF, 0x4F1F, 0x571F, 0x56FF, 0x4EDE, 0x56FF, 0x571F, 0x573F, 0x573F, 0x571F, 0x56FF, 0x4EFF, 0x4EDE, 0x46BE, 0x3E7D, 0x363C, 0x25FB, 0x1DBA, 0x0D7A, 0x0D59, 0x0559, 0x0D7A, 0x0D7A,
  0x36DF, 0x3EFF, 0x4F1F, 0x575F, 0x677F, 0x679F, 0x679F, 0x677F, 0x675F, 0x673F, 0x671F, 0x5EFF, 0x5EFE, 0x5EBD, 0x5E7C, 0x5E7C, 0x5EBD, 0x5EFE, 0x5EFF, 0x671F, 0x675F, 0x677F, 0x6F9F, 0x6F9F, 0x679F, 0x5F5F, 0x4EFF, 0x2E3C, 0x159A, 0x0559,
  0x573F, 0x675F, 0x675F, 0x5E7C, 0x4578, 0x34B5, 0x2C12, 0x23B0, 0x1B4F, 0x1B0D, 0x12CD, 0x12AC, 0x124A, 0x0B4F, 0x0CD6, 0x14D6, 0x136F, 0x124A, 0x12AC, 0x12CD, 0x1B0D, 0x1B4E, 0x2390, 0x2C12, 0x34B5, 0x4578, 0x5E9C, 0x6F7F, 0x673F, 0x367D,
  0x2E1C, 0x367D, 0x2DDA, 0x130E, 0x09E8, 0x09A8, 0x09A7, 0x09A8, 0x09C8, 0x09C8, 0x09E9, 0x09A8, 0x13D2, 0x4F3F, 0x473F, 0x16FF, 0x16BF, 0x0BD1, 0x09A8, 0x09E9, 0x09C8, 0x09C8, 0x09A8, 0x09A7, 0x09A8, 0x09C8, 0x12EE, 0x25DA, 0x369E, 0x2E3C,
  0x0519, 0x057A, 0x0D9A, 0x15DC, 0x1579, 0x14D7, 0x0C54, 0x0BF2, 0x0BB1, 0x0B70, 0x132F, 0x0B50, 0x36BF, 0x9FBF, 0x875F, 0x36DF, 0x16DF, 0x163D, 0x0B4F, 0x0B2F, 0x0B70, 0x0BB1, 0x0BF2, 0x0C54, 0x14D7, 0x1579, 0x15DC, 0x0D9A, 0x057A, 0x0518,
  0xFFFF, 0xFFFF, 0x15DB, 0x0D9A, 0x0DBB, 0x0DBB, 0x0DBB, 0x0DFC, 0x0E1C, 0x161D, 0x161C, 0x165E, 0x26DF, 0x673F, 0x673F, 0x26DF, 0x169F, 0x163D, 0x163D, 0x161C, 0x161D, 0x0E1C, 0x0DFC, 0x0DBB, 0x0DBB, 0x0DBB, 0x0D9A, 0x15DB, 0xFFFF, 0xFFFF,
  0x2555, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0x23F5, 0x0D79, 0x0D59, 0x0D59, 0x0D79, 0x0D59, 0x15DB, 0x16DF, 0x1EBF, 0x1EBF, 0x16BF, 0x165E, 0x163D, 0x0DBB, 0x0D59, 0x0D7A, 0x0D79, 0x0D79, 0x0D38, 0x23F5, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2555,
  0xFFFF, 0xFFFF, 0x4FFF, 0x0DF7, 0x4FFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x163D, 0x1EFF, 0x165E, 0x163D, 0x169F, 0x161D, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4FFF, 0x0DF7, 0x4FFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x03FF, 0x2555, 0x0DF7, 0x0DFF, 0x055A, 0x0DFF, 0x0D7B, 0x163D, 0x163D, 0x163D, 0x163D, 0x0DFD, 0x0DF7, 0x055A, 0x0DF7, 0x0DF7, 0x2555, 0x03FF, 0x07FF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t watermelonSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x018C, 0xFFFF, 0x0340, 0x0380, 0xFFFF, 0x22A0, 0x0000, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0333, 0xFFFF, 0x0D04, 0x0443, 0x03C0, 0x0380, 0xFFFF, 0x22A0, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0019, 0xFFFF, 0x0098, 0x0231, 0x0CC5, 0x0403, 0x0380, 0x0380, 0xFFFF, 0x22A0,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0019, 0xFFFF, 0x011C, 0x00DA, 0x0059, 0x028E, 0x0CC4, 0x03C2, 0x0360, 0x04C0, 0x03E0,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0199, 0xFFFF, 0x011B, 0x00FE, 0x00DA, 0x00B7, 0x0098, 0x03C9, 0x0463, 0x03A0, 0x0380, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0199, 0xFFFF, 0x011C, 0x00FE, 0x00FE, 0x00DA, 0x00B7, 0x0078, 0x01D2, 0x0CC5, 0x03E2, 0x0360, 0x07E0,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3339, 0xFFFF, 0x121C, 0x00FE, 0x00FD, 0x00FD, 0x00DC, 0x00B7, 0x00B7, 0x0098, 0x03C9, 0x0463, 0x0360, 0x03A1,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x6339, 0xFFFF, 0x541D, 0x4BBF, 0x013E, 0x00DD, 0x00FD, 0x00FC, 0x00B8, 0x00D7, 0x0079, 0x028F, 0x0CC4, 0x03A1, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x649D, 0x649F, 0x53FE, 0x11FD, 0x00BE, 0x00FF, 0x00FF, 0x00D9, 0x00B7, 0x0098, 0x0173, 0x0CA5, 0x03E2, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x5C7D, 0x6CDF, 0x5C7E, 0x4BDE, 0x229E, 0x00BB, 0x00C9, 0x00D2, 0x00DC, 0x00B7, 0x00B8, 0x00F6, 0x0C47, 0x0402, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x5C7D, 0x6CBF, 0x6CBF, 0x5C3E, 0x4BDE, 0x2ADF, 0x00B3, 0x00C1, 0x00CD, 0x00FE, 0x00B7, 0x00B7, 0x00B7, 0x0408, 0x0422, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x5C7D, 0x6CBF, 0x649F, 0x649E, 0x541E, 0x4BDE, 0x2ADE, 0x00BE, 0x00FC, 0x00FD, 0x00FE, 0x00D9, 0x00B7, 0x00B8, 0x03E9, 0x0442, 0x0340,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x5C7D, 0x6CBF, 0x64BF, 0x649E, 0x649E, 0x4BDE, 0x53FE, 0x225E, 0x00BD, 0x00FD, 0x00FD, 0x00FE, 0x00DB, 0x00B7, 0x00B7, 0x03E9, 0x0442, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64D9, 0xFFFF, 0x5C7D, 0x6CBF, 0x64BF, 0x649E, 0x64BE, 0x5C3E, 0x43BE, 0x4BFE, 0x09BD, 0x00BE, 0x00FE, 0x00FE, 0x00FE, 0x00DB, 0x00B7, 0x00D7, 0x0428, 0x0422, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x64DF, 0xFFFF, 0x5C7D, 0x6CBF, 0x64BF, 0x649E, 0x64BE, 0x5C7E, 0x4BBE, 0x4BDE, 0x3B5E, 0x00FE, 0x00D5, 0x00C6, 0x00D0, 0x00FF, 0x00DB, 0x0098, 0x0135, 0x0C86, 0x0402, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3339, 0xFFFF, 0x5C7D, 0x6CBF, 0x649F, 0x649E, 0x64BE, 0x5C7E, 0x4BDE, 0x4BBE, 0x53FE, 0x09DD, 0x00BE, 0x00F8, 0x00A3, 0x00CD, 0x00FF, 0x00FB, 0x0078, 0x01F2, 0x0CC4, 0x03C1, 0x0360,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x3199, 0xFFFF, 0x649D, 0x6CDF, 0x6CBF, 0x649E, 0x649E, 0x5C3E, 0x4BBE, 0x4BBE, 0x541E, 0x229E, 0x00BD, 0x00FD, 0x00FE, 0x00FD, 0x00FD, 0x00FE, 0x00FB, 0x0078, 0x030D, 0x0CA3, 0x0380, 0x0380,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0199, 0xFFFF, 0x543D, 0x647F, 0x5C7E, 0x5C3E, 0x541E, 0x4BDE, 0x43BE, 0x4BDE, 0x53FE, 0x229E, 0x00DD, 0x00FE, 0x00FF, 0x00FD, 0x00FD, 0x00FD, 0x00FD, 0x00BA, 0x00F6, 0x0C47, 0x0423, 0x0360, 0x03C1,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0199, 0xFFFF, 0x123C, 0x4BBF, 0x53FE, 0x4BDE, 0x4BDE, 0x4BDE, 0x53FE, 0x4BFE, 0x3B5E, 0x09DD, 0x00BD, 0x00FE, 0x00CF, 0x00CE, 0x00FC, 0x00FD, 0x00FD, 0x00FC, 0x0079, 0x026F, 0x0CC4, 0x03C1, 0x0360, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x0019, 0xFFFF, 0x011C, 0x00FE, 0x013E, 0x11FD, 0x229E, 0x2ADF, 0x2ADE, 0x227E, 0x09BD, 0x00FE, 0x00BE, 0x00FD, 0x00FF, 0x00CD, 0x00A0, 0x00D8, 0x00FE, 0x00FD, 0x00BA, 0x00F6, 0x0C47, 0x0423, 0x0380, 0x0381, 0xFFFF,
  0xFFFF, 0xFFFF, 0x0019, 0xFFFF, 0x011B, 0x00FE, 0x00FD, 0x00DD, 0x00BE, 0x00BB, 0x00B3, 0x00BE, 0x00BD, 0x00BE, 0x00D5, 0x00F9, 0x00FE, 0x00FD, 0x00FC, 0x00D8, 0x00FD, 0x00FE, 0x00FB, 0x0078, 0x032C, 0x0CC4, 0x03C1, 0x0360, 0xFFFF, 0x22A0,
  0xFFFF, 0x018C, 0xFFFF, 0x011C, 0x00FE, 0x00FE, 0x00FD, 0x00FD, 0x00FF, 0x00C9, 0x00C0, 0x00FC, 0x00FD, 0x00FE, 0x00C5, 0x00A4, 0x00FD, 0x00FD, 0x00FD, 0x00FE, 0x00FE, 0x00FC, 0x0079, 0x0250, 0x0CC5, 0x03E2, 0x0380, 0x03C0, 0x0000, 0x03E0,
  0x018C, 0xFFFF, 0x0059, 0x00D9, 0x00D9, 0x00D9, 0x00DA, 0x00DB, 0x00FE, 0x00D1, 0x00CD, 0x00FD, 0x00FD, 0x00FE, 0x00D0, 0x00CD, 0x00FD, 0x00FD, 0x00FD, 0x00FD, 0x00FB, 0x0079, 0x01F1, 0x0CC5, 0x0403, 0x03A0, 0x0380, 0xFFFF, 0x22A0, 0xFFFF,
  0xFFFF, 0x0CE4, 0x0231, 0x0059, 0x00B7, 0x00D7, 0x00B7, 0x00B7, 0x00B8, 0x00DB, 0x00DD, 0x00FD, 0x00FD, 0x00FE, 0x00FF, 0x00FF, 0x00FE, 0x00FD, 0x00FC, 0x00BA, 0x0078, 0x0250, 0x0CC5, 0x0423, 0x03C0, 0x0360, 0xFFFF, 0x0BE0, 0xFFFF, 0xFFFF,
  0x0360, 0x0443, 0x0CC5, 0x028E, 0x0098, 0x0078, 0x00B7, 0x00D7, 0x00B7, 0x00B7, 0x00B7, 0x00B8, 0x00D9, 0x00DA, 0x00DA, 0x00DA, 0x00DA, 0x00B9, 0x0079, 0x00F6, 0x032C, 0x0CC5, 0x0403, 0x03C0, 0x0380, 0xFFFF, 0x22A0, 0x0000, 0xFFFF, 0xFFFF,
  0x0380, 0x03A0, 0x0403, 0x0CC4, 0x03C9, 0x01B2, 0x0098, 0x0079, 0x0098, 0x00B8, 0x00B7, 0x00B7, 0x00B7, 0x00B7, 0x0097, 0x0078, 0x0078, 0x00F6, 0x026F, 0x0C47, 0x0CC4, 0x03E2, 0x03A0, 0x0380, 0xFFFF, 0x03E0, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0x0380, 0x0380, 0x03C2, 0x0463, 0x0CC5, 0x03C9, 0x028F, 0x0174, 0x00F6, 0x00B7, 0x0098, 0x00B7, 0x00D7, 0x0135, 0x01F2, 0x030D, 0x0C47, 0x0CC4, 0x0423, 0x03C1, 0x0380, 0x0380, 0xFFFF, 0x03E0, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x03E0, 0xFFFF, 0x03A0, 0x0380, 0x03A0, 0x03E2, 0x0463, 0x0CC4, 0x0CA5, 0x0C47, 0x0408, 0x03E9, 0x03E9, 0x0428, 0x0C86, 0x0CC4, 0x0CA3, 0x0423, 0x03C1, 0x0380, 0x0380, 0x03A0, 0xFFFF, 0x22A0, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0x22A0, 0xFFFF, 0x0BE7, 0x03A0, 0x0380, 0x0360, 0x03A1, 0x03E2, 0x0402, 0x0422, 0x0442, 0x0442, 0x0422, 0x0402, 0x03C1, 0x0380, 0x0360, 0x0380, 0x03A1, 0xFFFF, 0xFFFF, 0x22A0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x22A0, 0xFFFF, 0xFFFF, 0xFFFF, 0x0381, 0x0380, 0x0360, 0x0360, 0x0360, 0x0340, 0x0360, 0x0360, 0x0360, 0x0380, 0x0380, 0x03A1, 0xFFFF, 0xFFFF, 0x03E0, 0x03E0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t plumSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x7AB5, 0xFFFF, 0xFFFF, 0x5250, 0x4A2F, 0x39EE, 0x31CD, 0x31CD, 0x39CD, 0x39CD, 0x39CD, 0x31CC, 0xFFFF, 0x4BEF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x09E7, 0x22AA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x7AB5, 0xFFFF, 0x5250, 0x5251, 0x5251, 0x5A71, 0x5250, 0x4A2F, 0x39EE, 0x31CD, 0x39CD, 0x39EE, 0x39CD, 0x39CD, 0xFFFF, 0x22AA, 0x0000, 0x22AA, 0xFFFF, 0xFFFF, 0xFFFF, 0x22AA, 0x124A, 0x124B, 0x018C, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x49EF, 0xFFFF, 0x5250, 0x5251, 0x5A71, 0x5250, 0x5230, 0x5250, 0x5250, 0x5250, 0x420F, 0x31CD, 0x31CD, 0x39CD, 0x420E, 0x31CD, 0xFFFF, 0x22AA, 0xFFFF, 0x122A, 0x124A, 0x124A, 0x0A4A, 0x0A4A, 0x126B, 0x0A2A, 0xFFFF,
  0xFFFF, 0xFFFF, 0x49EF, 0xFFFF, 0x4A50, 0x5A71, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39ED, 0x31CD, 0x31CD, 0x39CD, 0x420E, 0x39ED, 0xFFFF, 0x124A, 0x124A, 0x1A8B, 0x128B, 0x124B, 0x122A, 0x126B, 0x0A2A, 0xFFFF,
  0xFFFF, 0x22AA, 0xFFFF, 0x5230, 0x5A71, 0x5250, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39ED, 0x31CD, 0x39CD, 0x31CD, 0x31AD, 0x31AC, 0x0A0A, 0x0A4A, 0x0209, 0x0A29, 0x122B, 0x0B64, 0x0B45, 0x122A, 0x12C9, 0xFFFF,
  0x4BEF, 0xC81F, 0x5250, 0x5251, 0x5251, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x420F, 0x31CD, 0x31CD, 0x31AC, 0x39ED, 0x52D0, 0x6BB4, 0x7434, 0x63F3, 0x7435, 0xBE3C, 0xFFFF, 0x04A0, 0x0480, 0xFFFF, 0x07E0, 0xFFFF,
  0x22AA, 0xFFFF, 0x4A30, 0x5A71, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A0F, 0x31CD, 0x31AC, 0x39CD, 0x5B31, 0x7C55, 0x84B7, 0x84B7, 0x8CB7, 0x8CB7, 0x8CD8, 0x84B7, 0x8C79, 0x0441, 0x0440, 0x000F, 0x0320, 0xFFFF,
  0xFFFF, 0x5250, 0x5251, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A2F, 0x39CD, 0x31AC, 0x426F, 0x7C35, 0x8CB7, 0x84B7, 0x84B7, 0x8496, 0x8496, 0x8496, 0x84B7, 0x8CD7, 0x94B9, 0x3C8A, 0x04A1, 0x8FFF, 0x03E0, 0x0000,
  0xFFFF, 0x420F, 0x5A71, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x39ED, 0x31AC, 0x52B0, 0x8496, 0x84B7, 0x84B7, 0x7C35, 0x6333, 0x5AD2, 0x5AD1, 0x62F2, 0x6353, 0x73D4, 0x44CE, 0x14C5, 0x1543, 0x1DC7, 0xFFFF, 0x0DE7,
  0x298B, 0x39EE, 0x5251, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x420E, 0x318C, 0x52B0, 0x84B7, 0x8496, 0x84B7, 0x73B4, 0x5250, 0x4A10, 0x4A30, 0x4A30, 0x4A10, 0x398D, 0x1B88, 0x0CE5, 0x14A5, 0x0CE3, 0x1DA7, 0x0D45, 0x07E0,
  0x31CC, 0x41EE, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x31AC, 0x424E, 0x8496, 0x8496, 0x84B7, 0x6B73, 0x4A10, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CE, 0x2369, 0x1506, 0x14C6, 0x14A5, 0x0CC3, 0x1E27, 0x15A6, 0xFFFF,
  0x31CD, 0x39EE, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x39CD, 0x7414, 0x84B7, 0x84B7, 0x6B94, 0x4A10, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CF, 0x2ACA, 0x1506, 0x14C6, 0x14C6, 0x14A5, 0x0CC3, 0x1E07, 0x1586, 0x4FE0,
  0x31CD, 0x39CD, 0x4A2F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A10, 0x6333, 0x84B7, 0x84B7, 0x73F5, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A10, 0x320C, 0x14A6, 0x14E6, 0x14C6, 0x14C6, 0x14A5, 0x0CE3, 0x1DA7, 0x1DA7, 0x1D87,
  0x39CD, 0x31CD, 0x420F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x7C35, 0x84B7, 0x7C56, 0x5250, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x41AE, 0x2389, 0x1506, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1504, 0x1DC7, 0x1DE7, 0x1587,
  0x31CD, 0x31CD, 0x39EE, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x62F2, 0x84B7, 0x8496, 0x5AD2, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A10, 0x322C, 0x14A6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1524, 0x1DC7, 0x1DC7, 0x1DA7,
  0x31CD, 0x31CD, 0x39CD, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A10, 0x6B94, 0x8CD7, 0x6B94, 0x4A10, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CF, 0x230A, 0x1506, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1545, 0x1DA7, 0x1DA7, 0x15A7,
  0x31CD, 0x39CD, 0x31CD, 0x420F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5230, 0x7C35, 0x8476, 0x5270, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CE, 0x1BA8, 0x1506, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A4, 0x1566, 0x1DA7, 0x1DA7, 0x15A7,
  0x31CD, 0x39ED, 0x31CD, 0x39ED, 0x5250, 0x5250, 0x5250, 0x5230, 0x5271, 0x8497, 0x6333, 0x4A10, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39CE, 0x1C08, 0x14E6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C4, 0x15A6, 0x1DA7, 0x1DA7, 0x15A7,
  0x31CD, 0x39ED, 0x31CD, 0x31CD, 0x4A0F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5AD2, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39CD, 0x1C27, 0x14E6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14E5, 0x1DA7, 0x1DA7, 0x1DC7, 0x15A7,
  0x31CD, 0x39EE, 0x31CD, 0x31CD, 0x39ED, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39CE, 0x1C27, 0x14E6, 0x14C6, 0x14C6, 0x14C6, 0x14A6, 0x1525, 0x1DA7, 0x15A7, 0x1DE7, 0x15A7,
  0x31CC, 0x31CD, 0x39CD, 0x31CD, 0x31CD, 0x420E, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39CE, 0x1BE8, 0x1506, 0x14C6, 0x14C6, 0x14C6, 0x14C5, 0x1586, 0x1DA7, 0x1DA7, 0x1DA7, 0x1D86,
  0xFFFF, 0x31CD, 0x39EE, 0x31CD, 0x31CD, 0x31CD, 0x4A2F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CE, 0x2389, 0x1506, 0x14C6, 0x14C6, 0x14C6, 0x14E5, 0x1DA7, 0x1D87, 0x1E27, 0x1587, 0xFFFF,
  0xFFFF, 0x31AC, 0x39ED, 0x31CD, 0x31CD, 0x31CD, 0x39CD, 0x4A2F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x41CF, 0x230A, 0x1506, 0x14C6, 0x14C6, 0x14A6, 0x1545, 0x15A7, 0x1DE7, 0x1DA7, 0x1D86, 0x254A,
  0x22AA, 0xFFFF, 0x31CD, 0x39EE, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x4A2F, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x49EF, 0x2A6B, 0x14E6, 0x14C6, 0x14C6, 0x14C5, 0x1586, 0x1DC7, 0x1DC7, 0x1586, 0xFFFF, 0x254A,
  0xC81F, 0x4BEF, 0x31CC, 0x39CD, 0x39EE, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x420E, 0x4A30, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x4A30, 0x31ED, 0x1C87, 0x14E6, 0x14C6, 0x1505, 0x1DC7, 0x1DE7, 0x1566, 0xFFFF, 0x254A, 0xFFFF,
  0xFFFF, 0x480F, 0xFFFF, 0x31CC, 0x39CD, 0x39EE, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x39CD, 0x420E, 0x4A2F, 0x5230, 0x5250, 0x5250, 0x5250, 0x5250, 0x5250, 0x39AE, 0x1BC8, 0x1506, 0x14A5, 0x1586, 0x1E07, 0x1566, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x22AA, 0xFFFF, 0x31CD, 0x39CD, 0x39EE, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x39CD, 0x39EE, 0x41EE, 0x41EE, 0x41EE, 0x3A0E, 0x39AE, 0x230A, 0x14E5, 0x1505, 0x1E07, 0x1566, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x22AA, 0xFFFF, 0x29AB, 0x39CD, 0x39ED, 0x39EE, 0x39CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CD, 0x31CC, 0x31CC, 0x39AD, 0x3A6D, 0x1D06, 0x1586, 0x1D87, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x480F, 0xFFFF, 0xFFFF, 0x31CD, 0x39CD, 0x39CD, 0x39EE, 0x39ED, 0x39CD, 0x39CD, 0x39CD, 0x39CD, 0x39ED, 0x39ED, 0x39EE, 0x39CD, 0x39AD, 0x14E6, 0x1566, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x22AA, 0xFFFF, 0xFFFF, 0x31CD, 0x39CD, 0x31CD, 0x39CD, 0x31CD, 0x31CD, 0x31CD, 0x39CD, 0x39CD, 0x39ED, 0x39CD, 0xFFFF, 0xFFFF, 0xFFFF, 0x254A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t orangeSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x055F, 0xFFFF, 0xFFFF, 0x0D3F, 0x2DBF, 0x3DDF, 0x45FF, 0x4E1F, 0x3DBE, 0x14DC, 0x03D9, 0x03D9, 0x041A, 0x043C, 0xFFFF, 0xFFFF, 0x09EF, 0x09E7, 0x4BEF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x001F, 0xFFFF, 0x04BF, 0x04BF, 0x04BF, 0x04FF, 0x04FF, 0x04FF, 0x04FF, 0x259F, 0x4E3F, 0x359E, 0x041A, 0x03D9, 0x03D9, 0x03FA, 0x03B7, 0xFFFF, 0xFFFF, 0xFFFF, 0x1249, 0x122A, 0x122A, 0x09E7, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x03FF, 0xFFFF, 0x02B5, 0x04BF, 0x04BF, 0x04FF, 0x04BF, 0x049E, 0x047E, 0x047E, 0x049E, 0x047E, 0x153E, 0x563F, 0x1CFC, 0x0398, 0x03D9, 0x041B, 0x03FA, 0x0333, 0x0A29, 0x0A4B, 0x0A4A, 0x0A2A, 0x124B, 0x0A2A, 0xFFFF,
  0xFFFF, 0xFFFF, 0x03FF, 0xFFFF, 0x043E, 0x04BF, 0x04FF, 0x04BE, 0x049E, 0x049E, 0x04BE, 0x153F, 0x0D1F, 0x049E, 0x049E, 0x049E, 0x3DDF, 0x359E, 0x03B8, 0x03B8, 0x03B8, 0x0311, 0x124A, 0x1249, 0x124A, 0x124B, 0x122A, 0x1A8B, 0x0A2A, 0xFFFF,
  0xFFFF, 0x07FF, 0x07FF, 0x049F, 0x04BF, 0x04FF, 0x049E, 0x049E, 0x04BE, 0x257F, 0x4E1F, 0x35BF, 0x04DE, 0x049E, 0x04BE, 0x049E, 0x257F, 0x4DFF, 0x03D9, 0x03B9, 0x0376, 0x122A, 0x028D, 0x0332, 0x02F3, 0x0B83, 0x0B45, 0x124A, 0x0A69, 0xFFFF,
  0x001F, 0x055F, 0x07FF, 0x049E, 0x04FF, 0x049E, 0x049E, 0x04FF, 0x45DF, 0x563F, 0x257F, 0x049E, 0x049E, 0x049E, 0x04BE, 0x049E, 0x0D1E, 0x563F, 0x253D, 0x03B8, 0x0398, 0x0377, 0x03B8, 0x03D9, 0x03BC, 0x0449, 0x0CC0, 0xFFFF, 0xFFFF, 0xFFFF,
  0x055F, 0xFFFF, 0x049E, 0x04FF, 0x049E, 0x049E, 0x0D1F, 0x4DFF, 0x4E1F, 0x257F, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x257F, 0x563F, 0x3DBE, 0x14DC, 0x049B, 0x043A, 0x03D8, 0x039A, 0x0452, 0x0C40, 0x201F, 0x0320, 0xFFFF,
  0x001F, 0x04FF, 0x04BF, 0x04BF, 0x049E, 0x04DE, 0x45FF, 0x4E1F, 0x35BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x153F, 0x45FF, 0x563F, 0x563F, 0x4E3F, 0x3DDE, 0x03FB, 0x042E, 0x0CA1, 0x0FFF, 0x4BE0, 0x0000,
  0xFFFF, 0x045C, 0x04FF, 0x049E, 0x049E, 0x257F, 0x4E1F, 0x45FF, 0x04FF, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BE, 0x0D1E, 0x257F, 0x35BF, 0x0C9C, 0x044E, 0x14A4, 0x1523, 0x1DC7, 0xFFFF, 0x0DE7,
  0x02D3, 0x041B, 0x04BF, 0x049E, 0x04BE, 0x3DDF, 0x4E1F, 0x2D9F, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049F, 0x03FB, 0x042D, 0x1CE5, 0x14A5, 0x0CE3, 0x1DA7, 0x0D45, 0x07E0,
  0x0397, 0x043C, 0x04BF, 0x049E, 0x04FF, 0x4DFF, 0x4DFF, 0x04FF, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x041C, 0x042E, 0x1CE5, 0x14C7, 0x14A5, 0x0CC3, 0x1E27, 0x1586, 0xFFFF,
  0x0398, 0x043B, 0x04BF, 0x049E, 0x0D1F, 0x4E1F, 0x3DDF, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x043D, 0x0412, 0x14E5, 0x14C6, 0x14C6, 0x14A5, 0x0CC3, 0x1E07, 0x15A7, 0x4FE0,
  0x0398, 0x041A, 0x04BF, 0x049E, 0x051F, 0x561F, 0x257F, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x047E, 0x03D7, 0x14C7, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x0CE3, 0x1DA7, 0x1DA7, 0x1D87,
  0x03B8, 0x03D9, 0x049E, 0x049E, 0x04FF, 0x4E1F, 0x153F, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BE, 0x03FB, 0x044D, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1504, 0x1DC7, 0x1DE7, 0x15A7,
  0x03B8, 0x03B9, 0x049E, 0x049F, 0x04BE, 0x45FF, 0x0D1F, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x047E, 0x03D6, 0x14C7, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1524, 0x1DC7, 0x1DC7, 0x1DA7,
  0x03B8, 0x03B8, 0x047D, 0x04BF, 0x047E, 0x2D9F, 0x0D1F, 0x049E, 0x04BE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x041D, 0x0410, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1545, 0x1DA7, 0x1DA7, 0x15A7,
  0x03B8, 0x03B8, 0x043C, 0x04BF, 0x049E, 0x04DE, 0x04DE, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x03FC, 0x044C, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A4, 0x1566, 0x1DA7, 0x1DA7, 0x15A7,
  0x03B8, 0x03D9, 0x03FA, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x03FB, 0x0C8A, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C4, 0x15A6, 0x1DA7, 0x1DA7, 0x15A7,
  0x03B8, 0x03FA, 0x03B9, 0x049E, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x03FB, 0x0C89, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14E5, 0x1DA7, 0x1DA7, 0x1DC7, 0x15A7,
  0x03B8, 0x03D9, 0x0398, 0x043C, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x03FB, 0x0C8A, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14A6, 0x1525, 0x1DA7, 0x15A7, 0x1DE7, 0x15A7,
  0x03D8, 0x03B8, 0x03D9, 0x03D9, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x041C, 0x046B, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14C5, 0x1586, 0x1DA7, 0x1DA7, 0x1DA7, 0x1D86,
  0xFFFF, 0x03B8, 0x041A, 0x0398, 0x043C, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x041D, 0x044D, 0x14E5, 0x14C6, 0x14C6, 0x14C6, 0x14E5, 0x1DA7, 0x1D87, 0x1E27, 0x1587, 0xFFFF,
  0x001F, 0x0398, 0x03B9, 0x03D9, 0x03B8, 0x047D, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x043E, 0x0411, 0x14E5, 0x14C6, 0x14C6, 0x14A6, 0x1545, 0x15A7, 0x1DE7, 0x1DA7, 0x1D86, 0x254A,
  0x055F, 0xFFFF, 0x03B8, 0x041A, 0x03B8, 0x03D9, 0x049E, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x047E, 0x03F4, 0x14C6, 0x14C6, 0x14C6, 0x14C5, 0x1586, 0x1DC7, 0x1DC7, 0x1586, 0xFFFF, 0x254A,
  0x0000, 0x02B5, 0x07FF, 0x03B9, 0x03FA, 0x03B8, 0x03D9, 0x047E, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x03D8, 0x0CA8, 0x14C6, 0x14C6, 0x1505, 0x1DC7, 0x1DE7, 0x1566, 0xFFFF, 0x254A, 0xFFFF,
  0xFFFF, 0x07FF, 0x07FF, 0x03F8, 0x03D9, 0x03FA, 0x03B8, 0x03B8, 0x043C, 0x049E, 0x04BF, 0x04BF, 0x04BF, 0x049E, 0x049E, 0x049E, 0x049E, 0x04BF, 0x04BF, 0x03FB, 0x046B, 0x14E5, 0x14A6, 0x1586, 0x1E07, 0x1566, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x03EF, 0xFFFF, 0x0398, 0x03D9, 0x041A, 0x03B8, 0x0398, 0x03D9, 0x041B, 0x047D, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x049E, 0x047D, 0x03FB, 0x0430, 0x14C5, 0x1506, 0x1E07, 0x1D86, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x03FF, 0xFFFF, 0x03FA, 0x03D9, 0x03D9, 0x03FA, 0x03B8, 0x0398, 0x03B8, 0x03B8, 0x03D9, 0x03D9, 0x03D9, 0x03D9, 0x03B9, 0x03B8, 0x03B9, 0x0417, 0x1506, 0x1D86, 0x1587, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x03EF, 0xFFFF, 0xFFFF, 0x03B9, 0x03D9, 0x03D9, 0x03FA, 0x03D9, 0x03D9, 0x03B8, 0x03B8, 0x03B8, 0x03D9, 0x03D9, 0x03D9, 0x03D9, 0x03B9, 0x1506, 0x1566, 0xFFFF, 0x0DE7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x001F, 0x055F, 0xFFFF, 0xFFFF, 0x03D9, 0x03D9, 0x03B8, 0x03B8, 0x03B8, 0x03B8, 0x03B8, 0x03D9, 0x03D9, 0x03D9, 0x03DA, 0xFFFF, 0xFFFF, 0xFFFF, 0x254A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t lemonSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4BE0, 0xFFFF, 0xFFFF, 0x1506, 0x14E6, 0x14E6, 0x14C6, 0x14C6, 0x14E6, 0x14E6, 0x14E6, 0xFFFF, 0xFFFF, 0x4BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07E0, 0xFFFF, 0x14A6, 0x14E6, 0x14E6, 0x1D06, 0x14E6, 0x14E6, 0x14C6, 0x14C6, 0x1506, 0x1506, 0x14E6, 0x14A5, 0xFFFF, 0x254A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x254A, 0x0000, 0x14C6, 0x1506, 0x1D27, 0x14E7, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x1D27, 0x14E6, 0x0CC9, 0xFFFF, 0x0BE7, 0x07E0, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x254A, 0x07FF, 0x14E7, 0x1506, 0x1CA5, 0x1CA4, 0x1CC5, 0x14C6, 0x14C7, 0x14C6, 0x14C5, 0x1CA4, 0x1CA5, 0x14C6, 0x1D06, 0x1CA4, 0x3BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x055F, 0xFFFF, 0xFFFF, 0x14C6, 0x056C, 0x05B3, 0x05F8, 0x061B, 0x063C, 0x063C, 0x061A, 0x05D5, 0x054E, 0x14C6, 0x050A, 0x05D2, 0x054E, 0x14E6, 0x14A5, 0x0000, 0x4BE0, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0x055F, 0xFFFF, 0x059F, 0x069F, 0x069F, 0x067F, 0x069F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x069F, 0x067F, 0x063B, 0x067F, 0x063F, 0x057C, 0x0D28, 0x0CA1, 0xFFFF, 0x22A0, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07FF, 0xFFFF, 0xFFFF, 0x067F, 0x069F, 0x06DF, 0x069F, 0x065F, 0x065F, 0x065F, 0x065F, 0x067F, 0x067F, 0x065F, 0x065F, 0x065F, 0x069F, 0x061E, 0x0518, 0x04EB, 0x1483, 0x1544, 0x1DE8, 0xFFFF, 0x0DE7,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x055F, 0xFFFF, 0x05DF, 0x069F, 0x06DF, 0x069F, 0x065F, 0x067F, 0x069F, 0x06BF, 0x16DF, 0x06BF, 0x065F, 0x067F, 0x067F, 0x065F, 0x067F, 0x061E, 0x0518, 0x04EA, 0x1CC5, 0x0CA5, 0x1503, 0x1DA7, 0x0CE3, 0x07E0,
  0xFFFF, 0xFFFF, 0xFFFF, 0x055F, 0xFFFF, 0x063F, 0x069F, 0x06FF, 0x065F, 0x067F, 0x0EDF, 0x2EFF, 0x471F, 0x3F1F, 0x16DF, 0x069F, 0x067F, 0x067F, 0x067F, 0x067F, 0x063E, 0x0519, 0x04EA, 0x1CC5, 0x14C7, 0x14A5, 0x0CE3, 0x1E28, 0x1587, 0xFFFF,
  0xFFFF, 0xFFFF, 0x07FF, 0xFFFF, 0x063F, 0x069F, 0x06DF, 0x065F, 0x06BF, 0x371F, 0x471F, 0x371F, 0x06BF, 0x067F, 0x065F, 0x065F, 0x067F, 0x067F, 0x067F, 0x065F, 0x055B, 0x04CC, 0x1CC5, 0x14C6, 0x14C6, 0x14A5, 0x0CE3, 0x1E07, 0x1586, 0x4BE0,
  0xFFFF, 0x07FF, 0x07FF, 0x06BF, 0x067F, 0x06DF, 0x065F, 0x16DF, 0x3F1F, 0x3F1F, 0x1EDF, 0x067F, 0x065F, 0x065F, 0x067F, 0x067F, 0x067F, 0x065F, 0x067F, 0x05BD, 0x04F1, 0x1CC5, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x0D04, 0x1DC7, 0x1DA7, 0x1D87,
  0xFFFF, 0x07FF, 0xFFFF, 0x065F, 0x06FF, 0x065F, 0x16DF, 0x3F1F, 0x3F1F, 0x0EDF, 0x067F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x0538, 0x0CC8, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A4, 0x1524, 0x1DC7, 0x1DE7, 0x15A7,
  0x05FF, 0xFFFF, 0x065F, 0x06DF, 0x065F, 0x06BF, 0x3F1F, 0x3F1F, 0x06BF, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x067F, 0x05DE, 0x04F0, 0x1CC5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x0CA4, 0x1545, 0x1DA7, 0x1DC7, 0x15A7,
  0x07FF, 0x067F, 0x067F, 0x069F, 0x067F, 0x371F, 0x3F1F, 0x16DF, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x057B, 0x04CA, 0x14C5, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x0CA4, 0x1566, 0x1DA7, 0x1DA7, 0x15A7,
  0xFFFF, 0x067F, 0x06FF, 0x065F, 0x16DF, 0x3F1F, 0x26FF, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x0538, 0x14C7, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x0CC4, 0x1586, 0x1DA7, 0x1DA7, 0x1DA7,
  0x067F, 0x065F, 0x069F, 0x067F, 0x371F, 0x3F1F, 0x069F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x063F, 0x0516, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14E4, 0x1DA7, 0x1DA7, 0x1DA7, 0x1DA7,
  0x067F, 0x069F, 0x065F, 0x06BF, 0x471F, 0x0EDF, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x061F, 0x0516, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A6, 0x1525, 0x1DA7, 0x15A7, 0x1DC7, 0x1587,
  0x065F, 0x06BF, 0x065F, 0x26FF, 0x371F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x061E, 0x0516, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14A5, 0x1566, 0x1DA7, 0x15A7, 0x1DE7, 0x15A6,
  0x067F, 0x069F, 0x067F, 0x371F, 0x06BF, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x063E, 0x0518, 0x0CC7, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C5, 0x15A6, 0x1DA7, 0x1DC7, 0x15A7, 0x1546,
  0x067F, 0x067F, 0x069F, 0x371F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x063F, 0x0539, 0x0CC9, 0x14C5, 0x14C6, 0x14C6, 0x14A6, 0x1525, 0x1DA7, 0x1DA7, 0x1E07, 0x1D87, 0xFFFF,
  0x067F, 0x065F, 0x067F, 0x069F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x055B, 0x04EC, 0x1CC5, 0x14C6, 0x14C6, 0x14C5, 0x1586, 0x1DA7, 0x1E27, 0x1587, 0xFFFF, 0x0BE7,
  0x067F, 0x067F, 0x067F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x059C, 0x04F0, 0x1CC5, 0x14C6, 0x14C6, 0x1505, 0x15A7, 0x1E07, 0x1DA7, 0x2545, 0x254A, 0x07E0,
  0x065F, 0x069F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x069F, 0x059C, 0x04F4, 0x14C6, 0x14C6, 0x14C6, 0x1546, 0x1E07, 0x1DA7, 0x1547, 0xFFFF, 0x03E0, 0xFFFF,
  0x065F, 0x06BF, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x069F, 0x05FD, 0x0519, 0x0518, 0x0CC8, 0x14C6, 0x14E5, 0x1E07, 0x1DC7, 0x1526, 0xFFFF, 0x4FE0, 0xFFFF, 0xFFFF,
  0x067F, 0x069F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x067F, 0x067F, 0x05DD, 0x0519, 0x0519, 0x055B, 0x050E, 0x14A4, 0x1DC7, 0x1DC7, 0x0D26, 0xFFFF, 0x254A, 0xFFFF, 0xFFFF, 0xFFFF,
  0x055F, 0x065F, 0x069F, 0x067F, 0x067F, 0x067F, 0x065F, 0x065F, 0x065F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x063E, 0x057B, 0x04F8, 0x0519, 0x059B, 0x053A, 0x04CC, 0x1D86, 0x1DA7, 0x0467, 0xFFFF, 0x4FEF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x067F, 0x069F, 0x067F, 0x065F, 0x065F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x067F, 0x065F, 0x061E, 0x059B, 0x0519, 0x0519, 0x053A, 0x057B, 0x053A, 0x055D, 0x6BE0, 0x1546, 0xFFFF, 0xFFFF, 0x4BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x065F, 0x06BF, 0x05FD, 0x053A, 0x057B, 0x057B, 0x05BC, 0x05BC, 0x05DC, 0x05BC, 0x057B, 0x053A, 0x0519, 0x0519, 0x053A, 0x059B, 0x053A, 0x0539, 0xFFFF, 0xFFFF, 0x07FF, 0xFFFF, 0x07E0, 0x07E0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x067F, 0x05FD, 0x0519, 0x053A, 0x0519, 0x053A, 0x055A, 0x0519, 0x0519, 0x0519, 0x0519, 0x0539, 0x055A, 0x055A, 0x053A, 0x055A, 0x0518, 0xFFFF, 0x03EF, 0x07FF, 0xFFFF, 0x254A, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0x05FD, 0x053A, 0x053A, 0x053A, 0x05BC, 0x053A, 0x055A, 0x053A, 0x0539, 0x0539, 0x0539, 0x053A, 0x055A, 0x055A, 0x0559, 0xFFFF, 0xFFFF, 0x03F7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF
};

const uint16_t cherriesSymbol[imageWidth * imageHeight] PROGMEM = {

  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0DE7, 0xFFFF, 0x0CA5, 0x1DC7, 0x1DC7, 0x1DA7, 0x1DA7, 0x1DC7, 0x1DC7, 0x1D67, 0xFFFF, 0xFFFF, 0x4BE0, 0x0BE0, 0x0BE0, 0x22AA, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0DE7, 0xFFFF, 0x1566, 0x1DC7, 0x1E07, 0x1DC7, 0x1DC7, 0x1DC7, 0x1DE7, 0x1DE7, 0x1DC7, 0x1DC7, 0x26A7, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0A4A, 0x124A, 0x0A4A, 0xFFFF, 0x4BEF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0DE7, 0xFFFF, 0x1566, 0x1DC7, 0x1E07, 0x15A6, 0x1566, 0x1545, 0x1505, 0x14E4, 0x0CE4, 0x14E4, 0x1564, 0x0CA2, 0x0460, 0x0480, 0x0BA4, 0x0A2A, 0x124A, 0x124A, 0x0A4A, 0x0000, 0x000F, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x254A, 0xFFFF, 0x1DA7, 0x1DE7, 0x1DA6, 0x1525, 0x14E5, 0x14C5, 0x14A5, 0x14A6, 0x14C6, 0x14A6, 0x14E6, 0x14E6, 0x0C47, 0x0440, 0x0480, 0x0C42, 0x122A, 0x0A4A, 0x0249, 0xFFFF, 0x0000, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x4FE0, 0xFFFF, 0x15A7, 0x1DA6, 0x1526, 0x14C5, 0x14A6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x14C6, 0x1D06, 0x1D07, 0x0CA4, 0x0480, 0x0CA0, 0x0480, 0x04A0, 0xFFFF, 0xFFFF, 0xFFFF, 0x000F, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x03E0, 0x0543, 0x1505, 0x1D46, 0x1D06, 0x1506, 0x14E6, 0x14C6, 0x14C6, 0x14C6, 0x1506, 0x1D27, 0x14E7, 0x0C82, 0x0460, 0x0CA0, 0x0460, 0xFFFF, 0xFFFF, 0x4BEF, 0x22AA, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x03E0, 0x13E7, 0x14E6, 0x14E6, 0x14E6, 0x14C6, 0x14C6, 0x14E6, 0x14E6, 0x14E6, 0x14C6, 0x0460, 0x0480, 0x0C61, 0x0420, 0x0440, 0x2540, 0x03E0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x1D06, 0x1506, 0x14E6, 0x1D28, 0x0461, 0x0440, 0x0480, 0x001F, 0xFFFF, 0x0460, 0x0460, 0xFFFF, 0x0BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07E0, 0x254A, 0x0BE7, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0x0440, 0x0460, 0x0461, 0xFFFF, 0x0BE0, 0x03E0, 0x0460, 0x0460, 0xFFFF, 0x0BE0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2540, 0x4BE0, 0x0C60, 0x0460, 0x0441, 0xFFFF, 0x04C0, 0x02A0, 0xFFFF, 0x0460, 0x0440, 0xFFFF, 0x2540, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x0000, 0x2540, 0x0BE0, 0x0440, 0x0440, 0xFFFF, 0x04C0, 0xFFFF, 0x03E0, 0xFFFF, 0x0460, 0x0440, 0xFFFF, 0x03E0, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0000, 0x2015, 0x0817, 0x000F, 0xFFFF, 0x2540, 0xFFFF, 0x0441, 0x0441, 0xFFFF, 0x04C0, 0xFFFF, 0xFFFF, 0x0000, 0xFFFF, 0x0481, 0x0440, 0x0000, 0x0000, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x07E0, 0xFFFF, 0x0480, 0x04E0, 0xFFFF, 0x02A5, 0x000F, 0xFFFF, 0xFFFF, 0x2015, 0x0817, 0x03E5, 0x0460, 0x15A0, 0xFFFF, 0x0817, 0x201F, 0x001F, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0x0000, 0x0819, 0x0839, 0x0839, 0x0838, 0x081A, 0x0ACA, 0x0953, 0x083A, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x0441, 0x0385, 0xFFFF, 0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF,
  0xFFFF, 0x2015, 0xFFFF, 0x0818, 0x0839, 0x083A, 0x083A, 0x0036, 0x0017, 0x0914, 0x0A4D, 0x081A, 0x0838, 0x083A, 0x0838, 0xFFFF, 0xFFFF, 0x0818, 0x0859, 0x081B, 0x026C, 0x0933, 0x081A, 0x0839, 0x0839, 0x0016, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF,
  0x2015, 0xFFFF, 0x0838, 0x0839, 0x0839, 0x0838, 0x0037, 0x0032, 0x0014, 0x010F, 0x00B2, 0x0013, 0x0033, 0x0839, 0x0839, 0x0838, 0x0838, 0x083A, 0x0839, 0x0819, 0x09B0, 0x09CF, 0x0017, 0x0036, 0x0839, 0x0839, 0x0838, 0xFFFF, 0x2015, 0xFFFF,
  0xFFFF, 0x0838, 0x083A, 0x0839, 0x0838, 0x0838, 0x0838, 0x0036, 0x0033, 0x0014, 0x0013, 0x0033, 0x0033, 0x0036, 0x0839, 0x083A, 0x083A, 0x0037, 0x0033, 0x0013, 0x0092, 0x010F, 0x0013, 0x0032, 0x0037, 0x0839, 0x083A, 0x0838, 0xFFFF, 0x201F,
  0x0011, 0x0037, 0x0839, 0x0018, 0x0838, 0x0838, 0x0838, 0x0839, 0x0838, 0x0037, 0x0036, 0x0036, 0x0037, 0x0838, 0x0838, 0x0838, 0x0839, 0x0036, 0x0033, 0x0033, 0x0013, 0x0014, 0x0034, 0x0036, 0x0838, 0x0838, 0x0838, 0x083A, 0x0838, 0xFFFF,
  0x0032, 0x0017, 0x1079, 0x2139, 0x0838, 0x0018, 0x0838, 0x0838, 0x0838, 0x0839, 0x0839, 0x0839, 0x0838, 0x0037, 0x0838, 0x0018, 0x0818, 0x0838, 0x0837, 0x0037, 0x0037, 0x0037, 0x0838, 0x0839, 0x0838, 0x0838, 0x0838, 0x0839, 0x0838, 0x0839,
  0x0033, 0x0016, 0x1079, 0x5B5B, 0x52FB, 0x2139, 0x0018, 0x0838, 0x0838, 0x0838, 0x0838, 0x0839, 0x0036, 0x0015, 0x0859, 0x2979, 0x1099, 0x0018, 0x0839, 0x0839, 0x0839, 0x0839, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x083A, 0x0036,
  0x0033, 0x0035, 0x0818, 0x429A, 0x5B9B, 0x5B7B, 0x2119, 0x0018, 0x0838, 0x0838, 0x0838, 0x0839, 0x0035, 0x0034, 0x0839, 0x4AFB, 0x5B5B, 0x31BA, 0x0818, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0839, 0x0034,
  0x0033, 0x0034, 0x0018, 0x297A, 0x5B9B, 0x535B, 0x531B, 0x0858, 0x0818, 0x0838, 0x0838, 0x0838, 0x0034, 0x0034, 0x0018, 0x31FA, 0x5B9B, 0x5B9B, 0x31DA, 0x0018, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0839, 0x0837, 0x0033,
  0x0033, 0x0033, 0x0036, 0x0839, 0x429A, 0x5B9B, 0x5B9B, 0x3A3A, 0x0018, 0x0838, 0x0838, 0x0838, 0x0034, 0x0033, 0x0017, 0x18D9, 0x5B7B, 0x533B, 0x5B7B, 0x18F9, 0x0018, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0839, 0x0036, 0x0033,
  0x0013, 0x0034, 0x0033, 0x0018, 0x0859, 0x3A1A, 0x531B, 0x63BB, 0x2979, 0x0018, 0x0838, 0x0839, 0x0035, 0x0033, 0x0035, 0x0019, 0x31FA, 0x5B9B, 0x5B7B, 0x4ADB, 0x0838, 0x0018, 0x0818, 0x0838, 0x0838, 0x0838, 0x0838, 0x0838, 0x0034, 0x0033,
  0x0034, 0x0034, 0x0033, 0x0034, 0x0838, 0x0019, 0x0859, 0x2139, 0x18F9, 0x2159, 0x18D9, 0x0819, 0x0037, 0x0033, 0x0033, 0x0037, 0x0819, 0x2999, 0x4ADB, 0x5B9B, 0x39FA, 0x0858, 0x1099, 0x0838, 0x0838, 0x0838, 0x0839, 0x0034, 0x0034, 0x0013,
  0xFFFF, 0x0033, 0x0035, 0x0033, 0x0034, 0x0036, 0x0818, 0x0018, 0x0018, 0x18D9, 0x1099, 0x0018, 0x0036, 0x0033, 0x0033, 0x0033, 0x0037, 0x0019, 0x0838, 0x18D9, 0x18F9, 0x2139, 0x2159, 0x0018, 0x0839, 0x0838, 0x0035, 0x0033, 0x0034, 0x0033,
  0x2015, 0xFFFF, 0x0013, 0x0035, 0x0033, 0x0033, 0x0033, 0x0034, 0x0035, 0x0014, 0x0014, 0x0033, 0x0033, 0x0034, 0x0035, 0x0033, 0x0033, 0x0035, 0x0837, 0x0018, 0x0018, 0x0818, 0x0818, 0x0838, 0x0036, 0x0034, 0x0033, 0x0035, 0x0033, 0xFFFF,
  0x0000, 0x000F, 0xFFFF, 0x0033, 0x0034, 0x0035, 0x0034, 0x0034, 0x0033, 0x0033, 0x0034, 0x0034, 0x0035, 0x0013, 0x0013, 0x0034, 0x0034, 0x0033, 0x0033, 0x0034, 0x0034, 0x0034, 0x0034, 0x0033, 0x0033, 0x0034, 0x0035, 0x0013, 0xFFFF, 0x2015,
  0xFFFF, 0xFFFF, 0x000F, 0xFFFF, 0x0013, 0x0034, 0x0034, 0x0034, 0x0033, 0x0033, 0x0014, 0x0034, 0x0014, 0x0014, 0xFFFF, 0x0013, 0x0014, 0x0034, 0x0034, 0x0034, 0x0033, 0x0033, 0x0033, 0x0034, 0x0034, 0x0014, 0x0013, 0xFFFF, 0x001F, 0xFFFF,
  0xFFFF, 0xFFFF, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF, 0xFFFF, 0x0015, 0x0014, 0x0014, 0x0015, 0xFFFF, 0xFFFF, 0xFFFF, 0x0817, 0xFFFF, 0x080F, 0x0014, 0x0034, 0x0034, 0x0033, 0x0033, 0x0034, 0x0034, 0x0034, 0x0012, 0xFFFF, 0x2015, 0xFFFF, 0xFFFF
};

// Define the reel arrays based on winning probabilities
const int reel1[] = {CHERRY, LEMON, ORANGE, PLUM, WATERMELON, BELL, DIAMOND, BAR, SEVEN, CHERRY, ORANGE, PLUM, WATERMELON, BELL, DIAMOND, BAR, SEVEN, CHERRY, PLUM, DIAMOND, WATERMELON, BELL, ORANGE, SEVEN, LEMON, BAR, CHERRY, SEVEN, WATERMELON, BELL};
const int reel2[] = {ORANGE, LEMON, PLUM, CHERRY, WATERMELON, DIAMOND, BAR, BELL, SEVEN, LEMON, CHERRY, ORANGE, WATERMELON, PLUM, SEVEN, BAR, DIAMOND, BELL, SEVEN, ORANGE, WATERMELON, LEMON, BELL, CHERRY, PLUM, DIAMOND, BAR, ORANGE, SEVEN, LEMON};
const int reel3[] = {PLUM, ORANGE, CHERRY, LEMON, WATERMELON, BELL, BAR, DIAMOND, SEVEN, SEVEN, ORANGE, PLUM, WATERMELON, LEMON, SEVEN, CHERRY, DIAMOND, BAR, SEVEN, BELL, WATERMELON, CHERRY, LEMON, ORANGE, PLUM, BELL, DIAMOND, SEVEN, ORANGE, BAR};

int lengthReel1, lengthReel2, lengthReel3;

// Function to draw a symbol based on its identifier
void drawSymbol(int symbol, int x, int y) {
  const uint16_t* bitmap;
  switch (symbol) {
    case SEVEN:
      bitmap = sevenSymbol;
      break;
    case BAR:
      bitmap = barSymbol;
      break;
    case DIAMOND:
      bitmap = diamondSymbol;
      break;
    case BELL:
      bitmap = bellSymbol;
      break;
    case WATERMELON:
      bitmap = watermelonSymbol;
      break;
    case PLUM:
      bitmap = plumSymbol;
      break;
    case ORANGE:
      bitmap = orangeSymbol;
      break;
    case LEMON:
      bitmap = lemonSymbol;
      break;
    case CHERRY:
      bitmap = cherriesSymbol;
      break;

      // ... Add cases for other symbols
  }
  tft.drawRGBBitmap(x, y, bitmap, imageWidth, imageHeight);
}

void drawAllSymbols(int offset1 = 0, int offset2 = 0, int offset3 = 0) {
  // Calculate offset of reels on top row
  int indexReel1Top = (indexReel1 - 1 < 0 ? (lengthReel1 - 1) : indexReel1 - 1);
  int indexReel2Top = (indexReel2 - 1 < 0 ? (lengthReel2 - 1) : indexReel2 - 1);
  int indexReel3Top = (indexReel3 - 1 < 0 ? (lengthReel3 - 1) : indexReel3 - 1);

  // Calculate offset of reels on bottom row
  int indexReel1Bottom = (indexReel1 + 1 > (lengthReel1 - 1) ? 0 : indexReel1 + 1);
  int indexReel2Bottom = (indexReel2 + 1 > (lengthReel2 - 1) ? 0 : indexReel2 + 1);
  int indexReel3Bottom = (indexReel3 + 1 > (lengthReel3 - 1) ? 0 : indexReel3 + 1);

  // Center
  drawSymbol(reel1[indexReel1], xPosReel1, yPosReel1);
  drawSymbol(reel2[indexReel2], xPosReel2, yPosReel2);
  drawSymbol(reel3[indexReel3], xPosReel3, yPosReel3);

  // Top
  drawSymbol(reel1[indexReel1Top], xPosReel1, yPosReel1 - 40 + offset1);
  drawSymbol(reel2[indexReel2Top], xPosReel2, yPosReel2 - 40 + offset2);
  drawSymbol(reel3[indexReel3Top], xPosReel3, yPosReel3 - 40 + offset3);

  // Draw a white square under the symbols to prevent dragging
  if (!offset1) tft.fillRect(xPosReel1, yPosReel1 - 40 + offset1 + 30, imageWidth, 10, ST77XX_WHITE);
  if (!offset2) tft.fillRect(xPosReel2, yPosReel2 - 40 + offset2 + 30, imageWidth, 10, ST77XX_WHITE);
  if (!offset3) tft.fillRect(xPosReel3, yPosReel3 - 40 + offset3 + 30, imageWidth, 10, ST77XX_WHITE);

  // Bottom
  drawSymbol(reel1[indexReel1Bottom], xPosReel1, yPosReel1 + 40 + offset1);
  drawSymbol(reel2[indexReel2Bottom], xPosReel2, yPosReel2 + 40 + offset2);
  drawSymbol(reel3[indexReel3Bottom], xPosReel3, yPosReel3 + 40 + offset3);
}

int spinReels() {

  for (int i = 0; i < random(10)+3; i++) {
    drawAllSymbols(20, 20, 20);
    indexReel1++;
    indexReel2++;
    indexReel3++;
    if (indexReel1 >= lengthReel1) indexReel1 = 0;
    if (indexReel2 >= lengthReel2) indexReel2 = 0;
    if (indexReel3 >= lengthReel3) indexReel3 = 0;
    drawAllSymbols(0, 0, 0);
  }
  cute._tone(NOTE_G5, 50, 0);

  for (int i = 0; i < random(10)+3; i++) {
    drawAllSymbols(0, 20, 20);
    indexReel2++;
    indexReel3++;
    if (indexReel2 >= lengthReel2) indexReel2 = 0;
    if (indexReel3 >= lengthReel3) indexReel3 = 0;
    drawAllSymbols(0, 0, 0);
  }
  cute._tone(NOTE_G5, 50, 0);

  for (int i = 0; i < random(10)+3; i++) {
    drawAllSymbols(0, 0, 20);
    indexReel3++;
    if (indexReel3 >= lengthReel3) indexReel3 = 0;
    drawAllSymbols(0, 0, 0);
  }
  cute._tone(NOTE_E5, 50, 0);

  return 0;
}

void setup() {

  Serial.begin(115200);
  // while (!Serial);

  // put your setup code here, to run once:
  pinMode(D0, OUTPUT);
  pinMode(D1, INPUT);

  cute.init(BUZZER_PIN);

  // Initialize the ST7735 TFT display
  tft.initR(INITR_MINI160x80);

  // Rotate screen to horizontal position
  tft.setRotation(3);

  tft.fillScreen(ST77XX_WHITE);

  // Spacing Reels on X axis: 10 [30] 25 [30] 25 [30] 10
  xPosReel1 = 5;
  xPosReel2 = 60;
  xPosReel3 = 115;

  yPosReel1 = 25;
  yPosReel2 = 25;
  yPosReel3 = 25;

  randomSeed(micros() + analogRead(A2));
  Serial.println(micros() + analogRead(A2));

  lengthReel1 = sizeof(reel1)/sizeof(int);
  lengthReel2 = sizeof(reel2)/sizeof(int);
  lengthReel3 = sizeof(reel3)/sizeof(int);

  indexReel1 = random(lengthReel1 - 1);
  indexReel2 = random(lengthReel2 - 1);
  indexReel3 = random(lengthReel3 - 1);

  Serial.print("reel 1 index: ");
  Serial.println(indexReel1);

  Serial.print("reel 2 index: ");
  Serial.println(indexReel2);

  Serial.print("reel 3 index: ");
  Serial.println(indexReel3);

  drawAllSymbols();
}

//CHERRY, LEMON, ORANGE, PLUM, WATERMELON, BELL, DIAMOND, BAR, SEVEN, CHERRY, ORANGE, PLUM, WATERMELON, BELL, DIAMOND, BAR, SEVEN, CHERRY, PLUM, DIAMOND, WATERMELON, BELL, ORANGE, SEVEN, LEMON, BAR, CHERRY, SEVEN, WATERMELON, BELL};
int checkWin() {
  if (
    (reel1[indexReel1] == CHERRY)
      || (reel1[indexReel1] == reel2[indexReel2]) 
      || (reel1[indexReel1] == reel2[indexReel2] && reel2[indexReel2] == reel3[indexReel3])
    ) {
    Serial.print("reel1 index:");
    Serial.println(reel1[indexReel1]);
    Serial.print("reel2 index:");
    Serial.println(reel2[indexReel2]);
    Serial.print("reel3 index:");
    Serial.println(reel3[indexReel3]);


    delayCount = 0;
    digitalWrite(D0, HIGH);
    cute.play(S_HAPPY_SHORT);
    return 1;
  } else {
    return 0;
  }
}

void blinkLed() {
  if (delayCount < 100000) {
    digitalWrite(D0, HIGH);
  } else if (delayCount > 100000) {
    digitalWrite(D0, LOW);
  }

  if (delayCount > 200000) {
    delayCount = 0;
  }
  delayCount++;
}


void loop() {

  if (digitalRead(D1) == LOW) {
    digitalWrite(D0, LOW);
    cute.play(S_CONNECTION);
    spinReels();
    bWin = checkWin();
  }
  if (bWin) {
    blinkLed();
  }
}
